Sig <- mod_s_tri$obs
Sig
summary(mod_s_tri)
mod_s_tri$residuals
names(mod_s_tri)
mod_s_tri$varresult
mod_s_tri$varresult.residuals
mod_s_tri$varresult$coefficients
names(mod_s_tri$varresult)
mod_s_triSerise
lm_row <- function(varest_model,H_max, type = "PT.asymptotic"){
H = c(1:H_max)
p_vals = c(rep(0,H_max))
for (h in H){
if (type == "BG"| type == "ES"){
test <- serial.test(varest_model, lags.bg = h, type = type)
}
else {
test <- serial.test(varest_model, lags.pt = h, type = type)
}
p_vals[h] <- test$serial$p.value
}
return(p_vals)
}
mod_s_triSeries
mod_s_triS$eries
mod_s_tri$Series
residuals(mod_s_tri)
e = residuals(mod_s_tri)
Cov_e = e.T @ e
Cov_e = t(e) @ e
Cov_e = t(e)
Cov_e = t(e) %*% e
Cov_e
summary(mod_s_tri)
Cov_e = (t(e) %*% e) / nobs
nobs <- mod_s_tri$obs
Cov_e = Cov_e / nobs
Cov_e
VARselect(s_tri, lag.max = 24)
lags <- VARselect(s_tri, lag.max = 24)$selection[1]
mod_s_tri <- VAR(s_tri, p = lags, type = "const")
nobs <- mod_s_tri$obs
summary(mod_s_tri)
e = residuals(mod_s_tri)
Cov_e = t(e) %*% e
Cov_e = Cov_e / nobs
Cov_e
View(sample)
df.rsiduals(mod_s_tri)
df.reiduals(mod_s_tri)
df.resduals(mod_s_tri)
df.residuals(mod_s_tri)
mod_s_tri$df.residuals
mod_s_tri$df.residual
df.residual(mod_s_tri)
beta coefficients(mod_s_tri)
beta = coefficients(mod_s_tri)
beta
length(beta)
length(beta[1])
beta[1]
beta$Series.1
length(beta$Series.1)
dim(beta$Series.1)
dfs = dim(beta$Series.1)[0]
dfs
dfs = dim(beta$Series.1)[1]
dfs
Cov_e = Cov_e / (nobs - ncoeffs)
beta = coefficients(mod_s_tri)
ncoeffs = dim(beta$Series.1)[1]
Cov_e = t(e) %*% e
Cov_e = Cov_e / (nobs - ncoeffs)
summary(mod_s_tri)
Cov_e
serial.test(mod_s_tri, lags.bg = 4, type = "ES")
mod_s_tri.reccusum <- stability(mod_s_tri, type = "OLS-CUSUM")
names(mod_s_tri.reccusum)
mod_s_tri.reccusum
reccusum <- stability(mod_stri, type = "Score-CUSUM")
plot(reccusum)
fluc <-  stability(mod_s_tri, type = "fluctuation")
plot(fluc)
A <- diag(5)
B <- diag(5)
for (n in c(1:5)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
triang
svar_tri <- SVAR(mod_s_tri, estmethod = "scoring", Bmat = triang, hessian=TRUE)
A <- diag(3)
B <- diag(3)
for (n in c(1:3)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
A[5, 1:4] <- c(0, 0, 0, 0)
svar_tri <- SVAR(mod_s_tri, estmethod = "scoring", Bmat = triang, hessian=TRUE)
svar_full$LR
svar_full$B
svar_tri$B
Sig_est <- svar_tri$Sigma.U
svar_tri$B
Cholesky(Cov_e)
install.packages("Matrix")
library(Matrix)
Cholesky(Cov_e)
type(Vov_e)
type(Cov_e)
chol(Cov_e)
B
svar_tri$B
t(chol(Cov_e))
run
na.data <- na.omit(read.csv2("C://Users//Max//Documents//Master//Inflation Expectations//data//monthly_preferred_1.csv", sep=";", stringsAsFactors = FALSE))
e5 <- ts(na.data$e5, start = c(1978,1), frequency = 12)
num.nas <- length(window(e5, 1978, c(1992,1)))
data <- na.data[num.nas:470,]
as.numeric(data$l_pnfuel)
sample <- data.frame(cbind(as.numeric(data$l_pnfuel),
as.numeric(data$e5),
as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)))
s_full <-  ts(cbind(as.numeric(data$l_pnfuel),
as.numeric(data$e5),
as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)),
start = c(1992,1), frequency = 12)
s_tri <-ts(cbind(as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)),
start = c(1992,1), frequency = 12)
s_pre <- window(s_full, 1992, 2004)
s_post <- window(s_full, 2005)
library(Matrix)
library(seasonal)
library(tseries)
library(vars)
library(urca) # more unit root and cointegration tests
library(strucchange) #for endogenous break point test
lags <- VARselect(s_full, lag.max = 24)$selection[1]
mod_s_full <- VAR(s_full, p = 9, type = "const")
Sig <- mod_s_full$obs
summary(mod_s_full)
mod_s_full$Series.residuals
lm_row <- function(varest_model,H_max, type = "PT.asymptotic"){
H = c(1:H_max)
p_vals = c(rep(0,H_max))
for (h in H){
if (type == "BG"| type == "ES"){
test <- serial.test(varest_model, lags.bg = h, type = type)
}
else {
test <- serial.test(varest_model, lags.pt = h, type = type)
}
p_vals[h] <- test$serial$p.value
}
return(p_vals)
}
p_vals <- lm_row(mod_s_full, H_max=1, type = "PT.adjusted")
p_vals
serial.test(mod_s_full, lags.bg = 4, type = "ES")
mod_s_full.reccusum <- stability(mod_s_full, type = "OLS-CUSUM")
names(mod_s_full.reccusum)
mod_s_full.reccusum
reccusum <- stability(mod_s_full, type = "Score-CUSUM")
plot(reccusum)
fluc <-  stability(mod_s_full, type = "fluctuation")
plot(fluc)
A <- diag(5)
B <- diag(5)
for (n in c(1:5)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
A[5, 1:4] <- c(0, 0, 0, 0)
A[2,1] <- 0
svar_full <- SVAR(mod_s_full, estmethod = "scoring", Bmat = triang)
svar_full$LR
svar_full$Ase
svar_full$B
svar_full$A
methods(SVAR)
lm(SVAR)
class::SVAR
getAnywhere(SVAR)
svar_full <- SVAR(mod_s_full, estmethod = "direct", Bmat = triang)
svar_full$LR
svar_full$A
svar_full$B
cholesky(Sig)
Cholesky(Sig)
Sig
lags <- VARselect(s_tri, lag.max = 24)$selection[1]
mod_s_tri <- VAR(s_tri, p = lags, type = "const")
nobs <- mod_s_tri$obs
summary(mod_s_tri)
e = residuals(mod_s_tri)
beta = coefficients(mod_s_tri)
ncoeffs = dim(beta$Series.1)[1]
Cov_e = t(e) %*% e
Cov_e = Cov_e / (nobs - ncoeffs)
df <- summary(mod_s_tri$varresult[[1]])$df[2]
df
nobs - ncoeffs
Cov_e = t(e) %*% e
Cov_e = Cov_e / (nobs - ncoeffs)
A <- diag(3)
B <- diag(3)
for (n in c(1:3)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
svar_tri <- SVAR(mod_s_tri, estmethod = "scoring", Bmat = triang, hessian=TRUE)
svar_tri$LR
svar_tri$Ase
svar_tri$B
t(chol(Cov_e))
svar_tri <- SVAR(mod_s_tri, estmethod = "direct", Bmat = triang, hessian=TRUE)
svar_tri$B
B_est <- matrix(svar_tri$B)
B_est
B_est <- matrix(svar_tri$B, 3, 3)
B_est
solve(B_est)
B_est %*% solve(B_est)
ginv(B_est)
B_example = matrix(c(0.059, 0.0, 0.0, -0.0116, -4.6864, 0.0, -0.0033, -0.3572, 1.4061), 3, 3 )
B_example
B_example = matrix(c(0.059, 0.0, 0.0, -0.0116, 4.6864, 0.0, -0.0033, -0.3572, 1.4061), 3, 3 )
B_axample
B_example
B_ex = t(B_example)
B_ex
solve(B_ex)
svar_tri <- SVAR(mod_s_tri, estmethod = "direct", Bmat = triang, hessian=TRUE)
svar_tri$LR
svar_tri$Ase
B_est <- matrix(svar_tri$B, 3, 3)
B_est
t(chol(Cov_e))
svar_tri <- SVAR(mod_s_tri, estmethod = "scoring", Bmat = triang, hessian=TRUE)
B_est <- matrix(svar_tri$B, 3, 3)
B_est
svar_tri <- SVAR(mod_s_tri, estmethod = "scoring", Bmat = triang, hessian=TRUE)
svar_tri$LR
svar_tri$Ase
svar_tri$A
B_est <- matrix(svar_tri$B, 3, 3)
t(chol(Cov_e))
matrix(svar_tri$B, 3, 3)
Sig_est <- svar_tri$Sigma.U
Sig_est
svar_tri <- SVAR(mod_s_tri, estmethod = "direct", Bmat = triang, hessian=TRUE)
svar_tri$LR
svar_tri$A
matrix(svar_tri$B, 3, 3)
t(chol(Cov_e))
Sig_est <- svar_tri$Sigma.U
Sig_est <- svar_tri$Sigma.U
Sig_est
na.data <- na.omit(read.csv2("C://Users//Max//Documents//Master//Inflation Expectations//data//monthly_preferred_1.csv", sep=";", stringsAsFactors = FALSE))
e5 <- ts(na.data$e5, start = c(1978,1), frequency = 12)
num.nas <- length(window(e5, 1978, c(1992,1)))
data <- na.data[num.nas:470,]
as.numeric(data$l_pnfuel)
sample <- data.frame(cbind(as.numeric(data$l_pnfuel),
as.numeric(data$e5),
as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)))
s_full <-  ts(cbind(as.numeric(data$l_pnfuel),
as.numeric(data$e5),
as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)),
start = c(1992,1), frequency = 12)
s_tri <-ts(cbind(as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)),
start = c(1992,1), frequency = 12)
s_pre <- window(s_full, 1992, 2004)
s_post <- window(s_full, 2005)
library(Matrix)
library(seasonal)
library(tseries)
library(vars)
library(urca) # more unit root and cointegration tests
library(strucchange) #for endogenous break point test
lags <- VARselect(s_full, lag.max = 24)$selection[1]
getAnywhere((SVAR))
getAnywhere(SVAR)
lags <- VARselect(s_tri, lag.max = 24)$selection[1]
mod_s_tri <- VAR(s_tri, p = lags, type = "const")
nobs <- mod_s_tri$obs
summary(mod_s_tri)
e <- residuals(mod_s_tri)
beta <- coefficients(mod_s_tri)
ncoeffs <- dim(beta$Series.1)[1]
df <- summary(mod_s_tri$varresult[[1]])$df[2]
Cov_e = t(e) %*% e
Cov_e = Cov_e / (nobs - ncoeffs)
lm_row <- function(varest_model,H_max, type = "PT.asymptotic"){
H = c(1:H_max)
p_vals = c(rep(0,H_max))
for (h in H){
if (type == "BG"| type == "ES"){
test <- serial.test(varest_model, lags.bg = h, type = type)
}
else {
test <- serial.test(varest_model, lags.pt = h, type = type)
}
p_vals[h] <- test$serial$p.value
}
return(p_vals)
}
p_vals <- lm_row(mod_stri, H_max=1, type = "PT.adjusted")
p_vals
serial.test(mod_s_tri, lags.bg = 4, type = "ES")
mod_s_tri.reccusum <- stability(mod_s_tri, type = "OLS-CUSUM")
names(mod_s_tri.reccusum)
mod_s_tri.reccusum
reccusum <- stability(mod_stri, type = "Score-CUSUM")
plot(reccusum)
fluc <-  stability(mod_s_tri, type = "fluctuation")
plot(fluc)
A <- diag(3)
B <- diag(3)
for (n in c(1:3)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
svar_tri <- SVAR(mod_s_tri, estmethod = "direct", Bmat = triang, hessian=TRUE)
svar_tri$LR
svar_tri$A
svar_tri$B
t(chol(Cov_e))
Amat <-svar_tri$A
Bmat <- svar_tri$B
sigma <- Vov_e
logLc <- -1 * (K * obs/2) * log(2 * pi) + obs/2 *
log(det(Amat)^2) - obs/2 * log(det(Bmat)^2) -
obs/2 * sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma))
K = length(A)
K
K <- mod_s_tri
K <- mod_s_tri$K
K
obs<- mod_s_tri$obs
logLc <- -1 * (K * obs/2) * log(2 * pi) + obs/2 *
log(det(Amat)^2) - obs/2 * log(det(Bmat)^2) -
obs/2 * sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma))
logLc <- (-1 * (K * obs/2) * log(2 * pi) + obs/2 *
log(det(Amat)^2) - obs/2 * log(det(Bmat)^2) -
obs/2 * sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma)))
logLc
sigma <- Cov_e
K <- mod_s_tri$K
obs<- mod_s_tri$obs
logLc <- (-1 * (K * obs/2) * log(2 * pi) + obs/2 *
log(det(Amat)^2) - obs/2 * log(det(Bmat)^2) -
obs/2 * sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma)))
logLc
sigma
logLc <- -1* (-1 * (K * obs/2) * log(2 * pi) + obs/2 *
log(det(Amat)^2) - obs/2 * log(det(Bmat)^2) -
obs/2 * sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma)))
logLc
Bmat
sigma
nobs
sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma))
log(det(Amat)^2)
Amat
na.data <- na.omit(read.csv2("..//data//monthly_preferred_1.csv", sep=";", stringsAsFactors = FALSE))
e5 <- ts(na.data$e5, start = c(1978,1), frequency = 12)
num.nas <- length(window(e5, 1978, c(1992,1)))
data <- na.data[num.nas:470,]
as.numeric(data$l_pnfuel)
sample <- data.frame(cbind(as.numeric(data$l_pnfuel),
as.numeric(data$e5),
as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)))
s_full <-  ts(cbind(as.numeric(data$l_pnfuel),
as.numeric(data$e5),
as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)),
start = c(1992,1), frequency = 12)
s_tri <-ts(cbind(as.numeric(data$cpi),
as.numeric(data$l_rgdp),
as.numeric(data$l_dm2m)),
start = c(1992,1), frequency = 12)
s_pre <- window(s_full, 1992, 2004)
s_post <- window(s_full, 2005)
library(Matrix)
library(seasonal)
library(tseries)
library(vars)
library(urca) # more unit root and cointegration tests
library(strucchange) #for endogenous break point test
lags <- VARselect(s_full, lag.max = 24)$selection[1]
mod_s_full <- VAR(s_full, p = 9, type = "const")
Sig <- mod_s_full$obs
summary(mod_s_full)
mod_s_full$Series.residuals
lm_row <- function(varest_model,H_max, type = "PT.asymptotic"){
H = c(1:H_max)
p_vals = c(rep(0,H_max))
for (h in H){
if (type == "BG"| type == "ES"){
test <- serial.test(varest_model, lags.bg = h, type = type)
}
else {
test <- serial.test(varest_model, lags.pt = h, type = type)
}
p_vals[h] <- test$serial$p.value
}
return(p_vals)
}
p_vals <- lm_row(mod_s_full, H_max=1, type = "PT.adjusted")
p_vals
serial.test(mod_s_full, lags.bg = 4, type = "ES")
mod_s_full.reccusum <- stability(mod_s_full, type = "OLS-CUSUM")
names(mod_s_full.reccusum)
mod_s_full.reccusum
reccusum <- stability(mod_s_full, type = "Score-CUSUM")
plot(reccusum)
fluc <-  stability(mod_s_full, type = "fluctuation")
plot(fluc)
A <- diag(5)
B <- diag(5)
for (n in c(1:5)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
A[5, 1:4] <- c(0, 0, 0, 0)
A[2,1] <- 0
svar_full <- SVAR(mod_s_full, estmethod = "direct", Bmat = triang)
svar_full$LR
svar_full$A
svar_full$B
Sig_est <- svar_full$Sigma.U
T = mod_s_full$obs
TLM <- T * log(det(Sig_est)) - log(det())
lags <- VARselect(s_tri, lag.max = 24)$selection[1]
mod_s_tri <- VAR(s_tri, p = lags, type = "const")
nobs <- mod_s_tri$obs
summary(mod_s_tri)
e <- residuals(mod_s_tri)
beta <- coefficients(mod_s_tri)
ncoeffs <- dim(beta$Series.1)[1]
df <- summary(mod_s_tri$varresult[[1]])$df[2]
Cov_e = t(e) %*% e
Cov_e = Cov_e / (nobs - ncoeffs)
lm_row <- function(varest_model,H_max, type = "PT.asymptotic"){
H = c(1:H_max)
p_vals = c(rep(0,H_max))
for (h in H){
if (type == "BG"| type == "ES"){
test <- serial.test(varest_model, lags.bg = h, type = type)
}
else {
test <- serial.test(varest_model, lags.pt = h, type = type)
}
p_vals[h] <- test$serial$p.value
}
return(p_vals)
}
p_vals <- lm_row(mod_stri, H_max=1, type = "PT.adjusted")
p_vals
serial.test(mod_s_tri, lags.bg = 4, type = "ES")
mod_s_tri.reccusum <- stability(mod_s_tri, type = "OLS-CUSUM")
names(mod_s_tri.reccusum)
mod_s_tri.reccusum
reccusum <- stability(mod_stri, type = "Score-CUSUM")
plot(reccusum)
fluc <-  stability(mod_s_tri, type = "fluctuation")
plot(fluc)
A <- diag(3)
B <- diag(3)
for (n in c(1:3)){
A[n,1:n-1] <- NA
B[n,n] <- NA}
triang = A + B
trinag
triang
svar_tri <- SVAR(mod_s_tri, estmethod = "direct", Bmat = triang, hessian=TRUE)
svar_tri$B
matrix(svar_tri$B, 3, 3)
t(chol(Cov_e))
Amat <- svar_tri$A
Bmat <- svar_tri$B
sigma <- Cov_e
K <- mod_s_tri$K
obs<- mod_s_tri$obs
logLc <- -1* (-1 * (K * obs/2) * log(2 * pi) + obs/2 *
log(det(Amat)^2) - obs/2 * log(det(Bmat)^2) -
obs/2 * sum(diag(t(Amat) %*% solve(t(Bmat)) %*%
solve(Bmat) %*% Amat %*% sigma)))
logLc
